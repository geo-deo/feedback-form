name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm

      # 1) ставим зависимости фронта (корень)
      - name: Install root deps
        run: npm ci

      # 2) ставим зависимости бэкенда (подпапка server)
      - name: Install server deps
        run: npm ci
        working-directory: server

      # 3) стартуем сервер и пишем логи в файл
      - name: Start server (background)
        run: |
          node server/index.js > server.log 2>&1 &
          echo $! > server_pid.txt

      # 4) ждём, пока /api/health станет доступен (макс. 90 сек)
      - name: Wait for healthcheck
        run: npx wait-on http://localhost:3001/api/health -t 90000

      # 5) простой smoke-тест ответа
      - name: Smoke test
        run: curl -s http://localhost:3001/api/health | grep -q '"ok":true'

      # 6) всегда показать последние логи сервера (на случай падения)
      - name: Show server log (debug)
        if: always()
        run: |
          echo "---- server.log ----"
          tail -n 200 server.log || true

      - name: Stop server
        if: always()
        run: kill $(cat server_pid.txt) || true